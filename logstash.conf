input {
  tcp {
    port => 5001
  }
  tcp {
    port => 5514
    type => syslog
  }
  tcp {
    port => 10514
    type => syslog
    ssl_enable => true
    ssl_verify => false
    ssl_cert => "/opt/logstash-forwarder/logstash-forwarder.crt"
    ssl_key => "/opt/logstash-forwarder/logstash-forwarder.key"
  }
  gelf {
    port => 12200
    protocol => tcp
  }
  syslog {
    port => 1514
  }
  lumberjack {
    port => 5043
    ssl_certificate => "/opt/logstash-forwarder/logstash-forwarder.crt"
    ssl_key => "/opt/logstash-forwarder/logstash-forwarder.key"
  }
}

filter {
  if [type] == "syslog" {
    grok {
      patterns_dir => "/etc/logstash/grok/grok-patterns"
      match => { "message" => "(?m)%{SYSLOG5424LINE}" }
    }
    syslog_pri { }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "logsource", "%{syslog5424_host}" ]
        replace => [ "message", "%{syslog5424_msg}" ]
        replace => [ "timestamp", "%{syslog5424_ts}" ]
        replace => [ "priority", "%{syslog5424_pri}" ]
        replace => [ "program", "%{syslog5424_app}" ]
        replace => [ "pid", "%{syslog5424_proc}" ]
        replace => [ "syslog_version", "%{syslog5424_ver}" ]
      }
      mutate {
        remove_field => [ "syslog5424_host", "syslog5424_msg", "syslog5424_ts", "syslog5424_pri", "syslog5424_app", "syslog5424_proc", "syslog5424_ver" ]
      }
    }
  }

  mutate {
    #begin of mutate generate configutation
    #end of mutate generate configutation
  }
}

output {
  #begin of output gelf generate configuration
  #end of output gelf generate configuration
  #begin of output stdout generate configuration
  #end of output stdout generate configuration
}
